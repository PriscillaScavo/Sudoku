{"ast":null,"code":"var _jsxFileName = \"/home/priscilla/Desktop/React/Sudoku/src/components/Tile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useState, useEffect } from 'react';\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tile(props) {\n  _s();\n\n  const [notes, setNotes] = useState(createNotes());\n  let name;\n\n  if ((props.c === 2 || props.c === 5) && (props.r === 2 || props.r === 5)) {\n    name = \"singleTileThickCR\";\n  } else if (props.c === 2 || props.c === 5) {\n    name = \"singleTileThickC\";\n  } else if (props.r === 2 || props.r === 5) {\n    name = \"singleTileThickR\";\n  } else {\n    name = \"singleTile\";\n  }\n\n  const highligh = {\n    backgroundColor: props.highligh ? \"#59E391\" : \"white\"\n  };\n  useEffect(() => {\n    console.log(props.note);\n\n    if (props.note != \"\") {\n      console.log(\"in if\");\n      setNotes(old => [...new Set([...old, props.note])]);\n    } else setNotes(() => []);\n  }, [props.note]);\n\n  function createNotes() {\n    return !props.note && props.note != \"\" ? [props.note] : [];\n  }\n\n  useEffect(() => {\n    console.log(notes);\n  }, [notes]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: name,\n    onClick: props.fillTile,\n    children: [!props.notesMode && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"number\",\n      children: [\" \", props.value === 0 ? \"\" : props.value, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.notesMode && /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"notes\",\n        children: [\" \", notes, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tile, \"ySnI1h0NdZYWvsyxdpz6uhQQ8Ss=\");\n\n_c = Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["/home/priscilla/Desktop/React/Sudoku/src/components/Tile.js"],"names":["React","Fragment","useContext","useState","useEffect","nanoid","Tile","props","notes","setNotes","createNotes","name","c","r","highligh","backgroundColor","console","log","note","old","Set","fillTile","notesMode","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+CC,SAA/C,QAAiE,OAAjE;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACO,WAAW,EAAZ,CAAlC;AACC,MAAIC,IAAJ;;AACG,MAAI,CAACJ,KAAK,CAACK,CAAN,KAAU,CAAV,IAAeL,KAAK,CAACK,CAAN,KAAU,CAA1B,MAAiCL,KAAK,CAACM,CAAN,KAAU,CAAV,IAAeN,KAAK,CAACM,CAAN,KAAU,CAA1D,CAAJ,EAAkE;AAC9DF,IAAAA,IAAI,GAAG,mBAAP;AACH,GAFD,MAEO,IAAIJ,KAAK,CAACK,CAAN,KAAU,CAAV,IAAeL,KAAK,CAACK,CAAN,KAAU,CAA7B,EAAgC;AACnCD,IAAAA,IAAI,GAAG,kBAAP;AACH,GAFM,MAEA,IAAIJ,KAAK,CAACM,CAAN,KAAU,CAAV,IAAeN,KAAK,CAACM,CAAN,KAAU,CAA7B,EAA+B;AAClCF,IAAAA,IAAI,GAAG,kBAAP;AACH,GAFM,MAEA;AACHA,IAAAA,IAAI,GAAG,YAAP;AACH;;AACL,QAAMG,QAAQ,GAAG;AACbC,IAAAA,eAAe,EAAER,KAAK,CAACO,QAAN,GAAgB,SAAhB,GAA4B;AADhC,GAAjB;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,IAAlB;;AACA,QAAGX,KAAK,CAACW,IAAN,IAAc,EAAjB,EAAoB;AAChBF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAR,MAAAA,QAAQ,CAACU,GAAG,IAAI,CAAC,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGD,GAAJ,EAASZ,KAAK,CAACW,IAAf,CAAR,CAAJ,CAAR,CAAR;AACH,KAHD,MAKIT,QAAQ,CAAC,MAAM,EAAP,CAAR;AACP,GARQ,EAQN,CAACF,KAAK,CAACW,IAAP,CARM,CAAT;;AAUA,WAASR,WAAT,GAAsB;AAClB,WAAQ,CAACH,KAAK,CAACW,IAAP,IAAeX,KAAK,CAACW,IAAN,IAAc,EAA9B,GAAmC,CAACX,KAAK,CAACW,IAAP,CAAnC,GAAkD,EAAzD;AACH;;AACDd,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACI;AAAQ,IAAA,SAAS,EAAGG,IAApB;AAA0B,IAAA,OAAO,EAAIJ,KAAK,CAACc,QAA3C;AAAA,eACK,CAACd,KAAK,CAACe,SAAP,iBAAoB;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA,sBAA0Bf,KAAK,CAACgB,KAAN,KAAgB,CAAhB,GAAoB,EAApB,GAAwBhB,KAAK,CAACgB,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,YADzB,eAEI;AAAA,gBACChB,KAAK,CAACe,SAAN,iBAAmB;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,wBAAwBd,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADpB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAzCuBF,I;;KAAAA,I","sourcesContent":["import React,{ Fragment, useContext, useState, useEffect }  from 'react';\nimport {nanoid} from \"nanoid\"\n\nexport default function Tile(props){\n    const [notes, setNotes] = useState(createNotes())\n     let name\n        if ((props.c===2 || props.c===5) && (props.r===2 || props.r===5)) {\n            name = \"singleTileThickCR\"\n        } else if (props.c===2 || props.c===5) {\n            name = \"singleTileThickC\"\n        } else if (props.r===2 || props.r===5){\n            name = \"singleTileThickR\"\n        } else {\n            name = \"singleTile\"\n        }\n    const highligh = {\n        backgroundColor: props.highligh? \"#59E391\" : \"white\"\n    }\n\n    useEffect(() => {\n        console.log(props.note)\n        if(props.note != \"\"){\n            console.log(\"in if\")    \n            setNotes(old => [...new Set([...old, props.note])])\n        }\n        else \n            setNotes(() => [])\n    }, [props.note])\n\n    function createNotes(){\n        return (!props.note && props.note != \"\")? [props.note] : []\n    }\n    useEffect(() => {\n        console.log(notes)\n    }, [notes])\n\n    return(\n        <button className= {name} onClick = {props.fillTile} >\n            {!props.notesMode && <h2 className=\"number\" > {props.value === 0 ? \"\": props.value} </h2>}\n            <div>\n            {props.notesMode && <h4 className=\"notes\"> {notes} </h4>}\n            </div>\n         </button>\n    )\n}"]},"metadata":{},"sourceType":"module"}