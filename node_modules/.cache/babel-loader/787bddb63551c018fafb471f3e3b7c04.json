{"ast":null,"code":"var _jsxFileName = \"/home/priscilla/Desktop/React/Sudoku/src/components/Tile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useState, useEffect } from 'react';\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tile(props) {\n  _s();\n\n  const [notes, setNotes] = useState(JSON.parse(localStorage.getItem(\"notes\" + props.id)) || []);\n  let name;\n\n  if ((props.c === 2 || props.c === 5) && (props.r === 2 || props.r === 5)) {\n    name = \"singleTileThickCR\";\n  } else if (props.c === 2 || props.c === 5) {\n    name = \"singleTileThickC\";\n  } else if (props.r === 2 || props.r === 5) {\n    name = \"singleTileThickR\";\n  } else {\n    name = \"singleTile\";\n  }\n\n  const highligh = {\n    backgroundColor: props.highligh ? \"#59E391\" : \"white\"\n  };\n  useEffect(() => {\n    if (props.note === '') setNotes(() => []);else setNotes(prevNotes => [...prevNotes, {\n      value: props.note,\n      id: nanoid()\n    }]);\n    setNotes(prevNotes => [...new Set(prevNotes.map(note => note.value))]);\n    localStorage.setItem(\"notes\" + props.id, JSON.stringify(notes));\n  }, [props.note]);\n  const notesJs = notes.map(note => {\n    return note.value;\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: name,\n    onClick: props.fillTile,\n    children: [!props.notesMode && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"number\",\n      children: [\" \", props.value === 0 ? \"\" : props.value, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.notesMode && /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"notes\",\n        children: [\" \", notesJs, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tile, \"N9DELoKc+9GaNkU7dBBX/OZAVYU=\");\n\n_c = Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["/home/priscilla/Desktop/React/Sudoku/src/components/Tile.js"],"names":["React","Fragment","useContext","useState","useEffect","nanoid","Tile","props","notes","setNotes","JSON","parse","localStorage","getItem","id","name","c","r","highligh","backgroundColor","note","prevNotes","value","Set","map","setItem","stringify","notesJs","fillTile","notesMode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+CC,SAA/C,QAAiE,OAAjE;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAAUN,KAAK,CAACO,EAArC,CAAX,KAAwD,EAAzD,CAAlC;AACC,MAAIC,IAAJ;;AACG,MAAI,CAACR,KAAK,CAACS,CAAN,KAAU,CAAV,IAAeT,KAAK,CAACS,CAAN,KAAU,CAA1B,MAAiCT,KAAK,CAACU,CAAN,KAAU,CAAV,IAAeV,KAAK,CAACU,CAAN,KAAU,CAA1D,CAAJ,EAAkE;AAC9DF,IAAAA,IAAI,GAAG,mBAAP;AACH,GAFD,MAEO,IAAIR,KAAK,CAACS,CAAN,KAAU,CAAV,IAAeT,KAAK,CAACS,CAAN,KAAU,CAA7B,EAAgC;AACnCD,IAAAA,IAAI,GAAG,kBAAP;AACH,GAFM,MAEA,IAAIR,KAAK,CAACU,CAAN,KAAU,CAAV,IAAeV,KAAK,CAACU,CAAN,KAAU,CAA7B,EAA+B;AAClCF,IAAAA,IAAI,GAAG,kBAAP;AACH,GAFM,MAEA;AACHA,IAAAA,IAAI,GAAG,YAAP;AACH;;AACL,QAAMG,QAAQ,GAAG;AACbC,IAAAA,eAAe,EAAEZ,KAAK,CAACW,QAAN,GAAgB,SAAhB,GAA4B;AADhC,GAAjB;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,KAAK,CAACa,IAAN,KAAe,EAAlB,EACIX,QAAQ,CAAC,MAAM,EAAP,CAAR,CADJ,KAGIA,QAAQ,CAACY,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAe;AAACC,MAAAA,KAAK,EAAEf,KAAK,CAACa,IAAd;AAAoBN,MAAAA,EAAE,EAAET,MAAM;AAA9B,KAAf,CAAd,CAAR;AACAI,IAAAA,QAAQ,CAACY,SAAS,IAAI,CAAC,GAAG,IAAIE,GAAJ,CAAQF,SAAS,CAACG,GAAV,CAAcJ,IAAI,IAAIA,IAAI,CAACE,KAA3B,CAAR,CAAJ,CAAd,CAAR;AAEJV,IAAAA,YAAY,CAACa,OAAb,CAAqB,UAAUlB,KAAK,CAACO,EAArC,EAAyCJ,IAAI,CAACgB,SAAL,CAAelB,KAAf,CAAzC;AACH,GARQ,EAQN,CAACD,KAAK,CAACa,IAAP,CARM,CAAT;AAUA,QAAMO,OAAO,GAAGnB,KAAK,CAACgB,GAAN,CAAUJ,IAAI,IAAI;AAC9B,WAAOA,IAAI,CAACE,KAAZ;AACH,GAFe,CAAhB;AAGA,sBACI;AAAQ,IAAA,SAAS,EAAGP,IAApB;AAA0B,IAAA,OAAO,EAAIR,KAAK,CAACqB,QAA3C;AAAA,eACK,CAACrB,KAAK,CAACsB,SAAP,iBAAoB;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA,sBAA0BtB,KAAK,CAACe,KAAN,KAAgB,CAAhB,GAAoB,EAApB,GAAwBf,KAAK,CAACe,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,YADzB,eAEI;AAAA,gBACCf,KAAK,CAACsB,SAAN,iBAAmB;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,wBAAwBF,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADpB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GArCuBrB,I;;KAAAA,I","sourcesContent":["import React,{ Fragment, useContext, useState, useEffect }  from 'react';\nimport {nanoid} from \"nanoid\"\n\nexport default function Tile(props){\n    const [notes, setNotes] = useState(JSON.parse(localStorage.getItem(\"notes\" + props.id)) || [])\n     let name\n        if ((props.c===2 || props.c===5) && (props.r===2 || props.r===5)) {\n            name = \"singleTileThickCR\"\n        } else if (props.c===2 || props.c===5) {\n            name = \"singleTileThickC\"\n        } else if (props.r===2 || props.r===5){\n            name = \"singleTileThickR\"\n        } else {\n            name = \"singleTile\"\n        }\n    const highligh = {\n        backgroundColor: props.highligh? \"#59E391\" : \"white\"\n    }\n    \n    useEffect(() => {\n        if(props.note === '')\n            setNotes(() => [])\n        else\n            setNotes(prevNotes => [...prevNotes, {value: props.note, id: nanoid()}])\n            setNotes(prevNotes => [...new Set(prevNotes.map(note => note.value))])\n\n        localStorage.setItem(\"notes\" + props.id, JSON.stringify(notes))\n    }, [props.note])\n\n    const notesJs = notes.map(note => {\n        return note.value \n    })\n    return(\n        <button className= {name} onClick = {props.fillTile} >\n            {!props.notesMode && <h2 className=\"number\" > {props.value === 0 ? \"\": props.value} </h2>}\n            <div>\n            {props.notesMode && <h4 className=\"notes\"> {notesJs} </h4>}\n            </div>\n         </button>\n    )\n}"]},"metadata":{},"sourceType":"module"}