{"ast":null,"code":"var _jsxFileName = \"/home/priscilla/Desktop/React/sudoku/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Tile from './components/Tile';\nimport Number from './components/Number';\nimport data from \"./components/data\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [numbers, setNumbers] = React.useState(allNumbers());\n  const numberGrid = numbers.map(n => {\n    return /*#__PURE__*/_jsxDEV(Number, {\n      value: n.value,\n      isSelected: n.isSelected,\n      id: n.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  });\n  const grid = data.map(sudoku => {\n    return sudoku.schema.map(row => {\n      return row.row.map(tile => {\n        return /*#__PURE__*/_jsxDEV(Tile, {\n          number: tile.n,\n          r: sudoku.schema.indexOf(row),\n          c: row.row.indexOf(tile)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 32\n        }, this);\n      });\n    });\n  });\n\n  function allNumbers() {\n    const numbers = [];\n\n    for (let i = 1; i < 10; i++) {\n      numbers.push({\n        value: i,\n        isSelected: false,\n        id: nanoid()\n      });\n    }\n\n    return numbers;\n  }\n\n  function createNumber(i) {\n    return {\n      value: i,\n      isSelected: false,\n      id: nanoid()\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sudoku-grid\",\n      children: grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"num-grid\",\n      children: numberGrid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"go6KHb0uhYeYBfRIYlea54A5xug=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/priscilla/Desktop/React/sudoku/src/App.js"],"names":["React","Tile","Number","data","nanoid","App","numbers","setNumbers","useState","allNumbers","numberGrid","map","n","value","isSelected","id","grid","sudoku","schema","row","tile","indexOf","i","push","createNumber"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACQ,QAAN,CAAeC,UAAU,EAAzB,CAA9B;AAEA,QAAMC,UAAU,GAAGJ,OAAO,CAACK,GAAR,CAAYC,CAAC,IAAI;AAChC,wBAAO,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,CAAC,CAACC,KAAjB;AAAwB,MAAA,UAAU,EAAED,CAAC,CAACE,UAAtC;AAAkD,MAAA,EAAE,EAAEF,CAAC,CAACG;AAAxD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFkB,CAAnB;AAIA,QAAMC,IAAI,GAAGb,IAAI,CAACQ,GAAL,CAASM,MAAM,IAAI;AAC5B,WACIA,MAAM,CAACC,MAAP,CAAcP,GAAd,CAAkBQ,GAAG,IAAG;AACpB,aACIA,GAAG,CAACA,GAAJ,CAAQR,GAAR,CAAYS,IAAI,IAAG;AACf,4BAAO,QAAC,IAAD;AAAM,UAAA,MAAM,EAAEA,IAAI,CAACR,CAAnB;AAAsB,UAAA,CAAC,EAAEK,MAAM,CAACC,MAAP,CAAcG,OAAd,CAAsBF,GAAtB,CAAzB;AAAqD,UAAA,CAAC,EAAEA,GAAG,CAACA,GAAJ,CAAQE,OAAR,CAAgBD,IAAhB;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,CADJ;AAKH,KAND,CADJ;AASH,GAVY,CAAb;;AAWI,WAASX,UAAT,GAAsB;AAClB,UAAMH,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBhB,MAAAA,OAAO,CAACiB,IAAR,CACA;AACAV,QAAAA,KAAK,EAAES,CADP;AAEAR,QAAAA,UAAU,EAAE,KAFZ;AAGAC,QAAAA,EAAE,EAAEX,MAAM;AAHV,OADA;AAOH;;AACD,WAAOE,OAAP;AACH;;AAED,WAASkB,YAAT,CAAsBF,CAAtB,EAAyB;AACrB,WAAO;AACHT,MAAAA,KAAK,EAAES,CADJ;AAEHR,MAAAA,UAAU,EAAE,KAFT;AAGHC,MAAAA,EAAE,EAAEX,MAAM;AAHP,KAAP;AAKH;;AACL,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA,gBACKY;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA,gBACKN;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAjDuBL,G;;KAAAA,G","sourcesContent":["import React from 'react';\nimport Tile from './components/Tile';\nimport Number from './components/Number';\nimport data from \"./components/data\"\nimport {nanoid} from \"nanoid\"\n\nexport default function App() {\n    const [numbers, setNumbers] = React.useState(allNumbers())\n\n    const numberGrid = numbers.map(n => {\n        return(<Number value={n.value} isSelected={n.isSelected} id={n.id}/>)\n    })\n\n    const grid = data.map(sudoku => {\n        return(\n            sudoku.schema.map(row =>{\n                return(\n                    row.row.map(tile =>{\n                        return(<Tile number={tile.n} r={sudoku.schema.indexOf(row)} c={row.row.indexOf(tile)}/>)\n                    })\n                )\n            })\n        )\n    })\n        function allNumbers() {\n            const numbers = []\n            for (let i = 1; i < 10; i++) {\n                numbers.push(\n                {\n                value: i,\n                isSelected: false,\n                id: nanoid()\n                }\n                )\n            }\n            return numbers\n        }\n\n        function createNumber(i) {\n            return {\n                value: i,\n                isSelected: false,\n                id: nanoid()\n            }\n        }\n    return (\n        <main>\n            <div className= \"sudoku-grid\">\n                {grid}\n            </div>\n            <div className= \"num-grid\">\n                {numberGrid}\n            </div>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}