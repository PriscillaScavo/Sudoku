{"ast":null,"code":"var _jsxFileName = \"/home/priscilla/Desktop/React/sudoku/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Tile from './components/Tile';\nimport Number from './components/Number';\nimport data from \"./components/data\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [numbers, setNumbers] = React.useState(allNumbers());\n  const [sudokuGrid, setSudokuGrid] = React.useState(generateSudokuGrid());\n  const [selectedNum, setSelectedNum] = React.useState();\n  const rowNumber = numbers.map(n => {\n    return /*#__PURE__*/_jsxDEV(Number, {\n      value: n.value,\n      isSelected: n.isSelected,\n      id: n.id,\n      selectNumber: () => selectNumber(n.id, n.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  });\n\n  function generateSudokuGrid() {\n    const grid = [];\n    grid.push(data.map(sudoku => {\n      sudoku.schema.map(row => {\n        row.row.map(tile => {\n          {\n            number = tile.n;\n            r = sudoku.schema.indexOf(row);\n            c = row.row.indexOf(tile);\n          }\n        });\n      });\n    }));\n    return grid;\n  }\n\n  function allNumbers() {\n    const numbers = [];\n\n    for (let i = 1; i < 10; i++) {\n      numbers.push(createNumber(i));\n    }\n\n    console.log(numbers);\n    return numbers;\n  }\n\n  function createNumber(i) {\n    return {\n      value: i,\n      isSelected: false,\n      id: nanoid()\n    };\n  }\n\n  function selectNumber(id, value) {\n    setSelectedNum(value);\n    setNumbers(oldNumber => oldNumber.map(n => {\n      return n.id === id ? { ...n,\n        isSelected: true\n      } : { ...n,\n        isSelected: false\n      };\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sudoku-grid\",\n      children: sudokuGrid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"num-grid\",\n      children: rowNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"UYVeWaSoZeQZPPHeEejUFq5eUns=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/priscilla/Desktop/React/sudoku/src/App.js"],"names":["React","Tile","Number","data","nanoid","App","numbers","setNumbers","useState","allNumbers","sudokuGrid","setSudokuGrid","generateSudokuGrid","selectedNum","setSelectedNum","rowNumber","map","n","value","isSelected","id","selectNumber","grid","push","sudoku","schema","row","tile","number","r","indexOf","c","i","createNumber","console","log","oldNumber"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Tile from './components/Tile';\nimport Number from './components/Number';\nimport data from \"./components/data\"\nimport {nanoid} from \"nanoid\"\n\nexport default function App() {\n    const [numbers, setNumbers] = React.useState(allNumbers())\n    const [sudokuGrid, setSudokuGrid] = React.useState(generateSudokuGrid())\n    const [selectedNum, setSelectedNum] = React.useState()\n\n    const rowNumber = numbers.map(n => {\n        return(<Number\n                value={n.value}\n                isSelected={n.isSelected}\n                id={n.id}\n                selectNumber= {() => selectNumber(n.id, n.value)}\n                />)\n    })\n    function generateSudokuGrid() {\n      const grid = []\n        grid.push(\n          data.map(sudoku =>{\n          sudoku.schema.map(row =>{\n             row.row.map(tile =>{\n              {\n               number= tile.n\n               r= sudoku.schema.indexOf(row)\n               c=row.row.indexOf(tile)\n               }\n               })\n            })\n            })\n          )\n        return grid\n    }\n\n\n    function allNumbers() {\n            const numbers = []\n            for (let i = 1; i < 10; i++) {\n                numbers.push(createNumber(i))\n            }\n            console.log(numbers)\n            return numbers\n        }\n    function createNumber(i) {\n            return {\n                value: i,\n                isSelected: false,\n                id: nanoid()\n                }\n            }\n    function selectNumber(id,value) {\n        setSelectedNum(value)\n        setNumbers(oldNumber => oldNumber.map(n => {\n            return n.id === id ?\n                {...n, isSelected: true} :\n                {...n, isSelected: false}\n        }))\n\n    }\n\n    return (\n        <main>\n            <div className= \"sudoku-grid\">\n                {sudokuGrid}\n            </div>\n            <div className= \"num-grid\">\n                {rowNumber}\n            </div>\n            <h2>{selectedNum}</h2>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}