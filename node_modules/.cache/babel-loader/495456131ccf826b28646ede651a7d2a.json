{"ast":null,"code":"var _jsxFileName = \"/home/priscilla/Desktop/React/Sudoku/src/components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useRef, useEffect, useState } from 'react';\nimport { nanoid } from \"nanoid\";\nimport { generateSudokuGrids } from './SudokuApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Menu(props) {\n  _s();\n\n  //const [sessions, setSessions] = useState([])\n  const [schemes, setSchemes] = useState(generateSudokuGrids());\n  const [showSchemes, setShowSchemes] = useState(false);\n  const [showSessions, setShowSessions] = useState(false);\n\n  function schemesList() {\n    schemes.map(scheme => /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"sudoku-grid\",\n      children: scheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 31\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"menu\",\n      children: \" Menu \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"continue\",\n      onClick: setShowSchemes(true),\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"continue\",\n      onClick: setShowSessions(true),\n      children: \"Continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, this), showSchemes && {\n      schemesList\n    }]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Menu, \"VVbQAyyn2/HKHNLAadGf36vjXYE=\");\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/priscilla/Desktop/React/Sudoku/src/components/Menu.js"],"names":["React","Fragment","useRef","useEffect","useState","nanoid","generateSudokuGrids","Menu","props","schemes","setSchemes","showSchemes","setShowSchemes","showSessions","setShowSessions","schemesList","map","scheme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,EAA4CC,QAA5C,QAA2D,OAA3D;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,SAAQC,mBAAR,QAAkC,aAAlC;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAC/B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACE,mBAAmB,EAApB,CAAtC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;;AAEA,WAASW,WAAT,GAAsB;AAClBN,IAAAA,OAAO,CAACO,GAAR,CAAYC,MAAM,iBAAI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAtB;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,SAAS,EAAG,UAApB;AAA+B,MAAA,OAAO,EAAGL,cAAc,CAAC,IAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAQ,MAAA,SAAS,EAAG,UAApB;AAA+B,MAAA,OAAO,EAAGE,eAAe,CAAC,IAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,EAIEH,WAAW,IAAI;AAACI,MAAAA;AAAD,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAlBuBR,I;;KAAAA,I","sourcesContent":["import React, {Fragment, useRef, useEffect, useState} from 'react';\nimport {nanoid} from \"nanoid\"\nimport {generateSudokuGrids} from './SudokuApi'\n\nexport default function Menu(props){\n    //const [sessions, setSessions] = useState([])\n    const [schemes, setSchemes] = useState(generateSudokuGrids())\n    const [showSchemes, setShowSchemes] = useState(false)\n    const [showSessions, setShowSessions] = useState(false)\n\n    function schemesList(){\n        schemes.map(scheme => <h4 className='sudoku-grid'>{scheme}</h4>)\n    }\n\n    return(\n        <Fragment>\n         <h4 className=\"menu\"> Menu </h4>\n         <button className = 'continue' onClick ={setShowSchemes(true)}>New Game</button>\n         <button className = 'continue' onClick ={setShowSessions(true)}>Continue</button>\n         {showSchemes && {schemesList}}\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}