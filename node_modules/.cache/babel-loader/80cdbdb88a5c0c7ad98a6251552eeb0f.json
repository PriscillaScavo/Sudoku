{"ast":null,"code":"var _jsxFileName = \"/home/priscilla/Desktop/React/Sudoku/src/components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useRef, useEffect, useState } from 'react';\nimport { nanoid } from \"nanoid\";\nimport Game from './Game';\nimport { generateSchemeIdList } from './SudokuApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Menu() {\n  _s();\n\n  const [schemesIdList, setSchemesIdList] = useState(generateSchemeIdList());\n  const [showSchemesIdList, setShowSchemesIdList] = useState(false);\n  const [showPlay, setShowPlay] = useState(true);\n  const [showSudoku, setShowSudoku] = useState(false);\n  const [selectId, setSelectId] = useState(\"\");\n\n  function selectedSudoku(id) {\n    setSelectId(id);\n    setShowSudoku(true);\n    setShowSchemesIdList(false);\n  }\n\n  const schemesIdListJs = schemesIdList.map(scheme => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        onClick: () => selectedSudoku(scheme.id),\n        children: scheme.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this);\n  });\n\n  function handlePlayButton() {\n    setShowSchemesIdList(true);\n    setShowPlay(false);\n  }\n\n  function clickMenu() {\n    setShowPlay(true);\n    setShowSudoku(false);\n    setShowSchemesIdList(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"menu\",\n      disabled: showPlay,\n      onClick: clickMenu,\n      children: \" Menu \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), showPlay && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"play\",\n      onClick: handlePlayButton,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 26\n    }, this), showSchemesIdList && schemesIdListJs, showSudoku && /*#__PURE__*/_jsxDEV(Game, {\n      schemeId: selectId,\n      id: nanoid()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Menu, \"E4alki7FGAftJBdQ9KJJWRn3Tt4=\");\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/priscilla/Desktop/React/Sudoku/src/components/Menu.js"],"names":["React","Fragment","useRef","useEffect","useState","nanoid","Game","generateSchemeIdList","Menu","schemesIdList","setSchemesIdList","showSchemesIdList","setShowSchemesIdList","showPlay","setShowPlay","showSudoku","setShowSudoku","selectId","setSelectId","selectedSudoku","id","schemesIdListJs","map","scheme","handlePlayButton","clickMenu"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,EAA4CC,QAA5C,QAA2D,OAA3D;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,oBAAR,QAAmC,aAAnC;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC1B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAACG,oBAAoB,EAArB,CAAlD;AACA,QAAM,CAACI,iBAAD,EAAoBC,oBAApB,IAA4CR,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASe,cAAT,CAAwBC,EAAxB,EAA2B;AACvBF,IAAAA,WAAW,CAACE,EAAD,CAAX;AACAJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAJ,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH;;AAED,QAAMS,eAAe,GAAEZ,aAAa,CAACa,GAAd,CAAkBC,MAAM,IAAI;AAC3C,wBACI;AAAA,6BACA;AAAI,QAAA,OAAO,EAAE,MAAMJ,cAAc,CAACI,MAAM,CAACH,EAAR,CAAjC;AAAA,kBACKG,MAAM,CAACH;AADZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARkB,CAAvB;;AASA,WAASI,gBAAT,GAA2B;AACvBZ,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAED,WAASW,SAAT,GAAoB;AAChBX,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAJ,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAqB,MAAA,QAAQ,EAAIC,QAAjC;AAA2C,MAAA,OAAO,EAAGY,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKZ,QAAQ,iBAAI;AAAQ,MAAA,SAAS,EAAG,MAApB;AAA2B,MAAA,OAAO,EAAGW,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFjB,EAGKb,iBAAiB,IAAIU,eAH1B,EAIKN,UAAU,iBAAK,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAIE,QAAlB;AAA4B,MAAA,EAAE,EAAIZ,MAAM;AAAxC;AAAA;AAAA;AAAA;AAAA,YAJpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAzCuBG,I;;KAAAA,I","sourcesContent":["import React, {Fragment, useRef, useEffect, useState} from 'react';\nimport {nanoid} from \"nanoid\"\nimport Game from './Game'\nimport {generateSchemeIdList} from './SudokuApi'\n\nexport default function Menu(){\n    const [schemesIdList, setSchemesIdList] = useState(generateSchemeIdList())\n    const [showSchemesIdList, setShowSchemesIdList] = useState(false)\n    const [showPlay, setShowPlay] = useState(true)\n    const [showSudoku, setShowSudoku] = useState(false)\n    const [selectId, setSelectId] = useState(\"\")\n\n    function selectedSudoku(id){\n        setSelectId(id)\n        setShowSudoku(true)\n        setShowSchemesIdList(false)\n    }\n    \n    const schemesIdListJs= schemesIdList.map(scheme => {\n            return(\n                <div>\n                <h4 onClick={() => selectedSudoku(scheme.id)}>\n                    {scheme.id}\n                </h4>\n                </div>\n            )\n        })\n    function handlePlayButton(){\n        setShowSchemesIdList(true) \n        setShowPlay(false)\n    }\n    \n    function clickMenu(){\n        setShowPlay(true)\n        setShowSudoku(false)\n        setShowSchemesIdList(false)\n    }\n\n    return(\n        <Fragment>\n            <h4 className=\"menu\" disabled = {showPlay} onClick ={clickMenu}> Menu </h4>\n            {showPlay && <button className = 'play' onClick ={handlePlayButton}>Play</button>}\n            {showSchemesIdList && schemesIdListJs}\n            {showSudoku &&  <Game schemeId = {selectId} id = {nanoid()} />}\n        </Fragment >\n    )\n}"]},"metadata":{},"sourceType":"module"}