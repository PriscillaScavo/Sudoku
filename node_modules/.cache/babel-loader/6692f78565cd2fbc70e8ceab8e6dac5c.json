{"ast":null,"code":"var _jsxFileName = \"/home/priscilla/Desktop/React/Sudoku/src/components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useRef, useEffect, useState } from 'react';\nimport { nanoid } from \"nanoid\";\nimport Game from './Game';\nimport { generateSudokuGrids } from './SudokuApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Menu(props) {\n  _s();\n\n  const [sessions, setSessions] = useState([]);\n  const [schemesIdList, setSchemesIdList] = useState(generateSudokuGrids());\n  const [showSchemes, setShowSchemes] = useState(false);\n  const [showSchemesIdList, setShowSchemesIdList] = useState(false);\n\n  function schemesList() {\n    //schemes.map(scheme => <h4 className='sudoku-grid'>{scheme.value}</h4>)\n    schemes.map(scheme => {\n      return;\n      scheme.map(row => {\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: row.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 41\n        }, this);\n      });\n    });\n  }\n\n  schemesList();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"menu\",\n      children: \" Menu \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"continue\",\n      onClick: () => setShowSchemesIdList(true),\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this), showSchemesIdList && {\n      schemesList\n    }]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Menu, \"Hhx6pWzbkplsWItlV1t+F2BcsNc=\");\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/priscilla/Desktop/React/Sudoku/src/components/Menu.js"],"names":["React","Fragment","useRef","useEffect","useState","nanoid","Game","generateSudokuGrids","Menu","props","sessions","setSessions","schemesIdList","setSchemesIdList","showSchemes","setShowSchemes","showSchemesIdList","setShowSchemesIdList","schemesList","schemes","map","scheme","row","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,EAA4CC,QAA5C,QAA2D,OAA3D;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,mBAAR,QAAkC,aAAlC;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAACG,mBAAmB,EAApB,CAAlD;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACY,iBAAD,EAAoBC,oBAApB,IAA4Cb,QAAQ,CAAC,KAAD,CAA1D;;AAEA,WAASc,WAAT,GAAsB;AAClB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,IAAI;AAAE;AACnBA,MAAAA,MAAM,CAACD,GAAP,CAAWE,GAAG,IAAI;AAAE,4BAAO;AAAA,oBAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AAA6B,OAAjD,CAAD;AACH,KAFD;AAIH;;AAELL,EAAAA,WAAW;AACP,sBACI,QAAC,QAAD;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,SAAS,EAAG,UAApB;AAA+B,MAAA,OAAO,EAAG,MAAMD,oBAAoB,CAAC,IAAD,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,EAGED,iBAAiB,IAAI;AAACE,MAAAA;AAAD,KAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAtBuBV,I;;KAAAA,I","sourcesContent":["import React, {Fragment, useRef, useEffect, useState} from 'react';\nimport {nanoid} from \"nanoid\"\nimport Game from './Game'\nimport {generateSudokuGrids} from './SudokuApi'\n\nexport default function Menu(props){\n    const [sessions, setSessions] = useState([])\n    const [schemesIdList, setSchemesIdList] = useState(generateSudokuGrids())\n    const [showSchemes, setShowSchemes] = useState(false)\n    const [showSchemesIdList, setShowSchemesIdList] = useState(false)\n\n    function schemesList(){\n        //schemes.map(scheme => <h4 className='sudoku-grid'>{scheme.value}</h4>)\n        schemes.map(scheme => { return\n            (scheme.map(row => { return(<h4>{row.value}</h4>)}))\n        })\n\n    }\n\nschemesList()\n    return(\n        <Fragment>\n         <h4 className=\"menu\"> Menu </h4>\n         <button className = 'continue' onClick ={() => setShowSchemesIdList(true)}>Play</button>\n         {showSchemesIdList && {schemesList}}\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}