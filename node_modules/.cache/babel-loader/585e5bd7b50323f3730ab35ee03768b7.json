{"ast":null,"code":"var _jsxFileName = \"/home/priscilla/Desktop/React/Sudoku/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport Tile from './Tile';\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\nimport Number from './Number';\nimport { generateSudokuGrid, allNumbers, checkWin } from './SudokuApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  const [sudoku, setSudoku] = useState(JSON.parse(localStorage.getItem(\"sudoku5\")) || generateSudokuGrid());\n  const [numbers, setNumbers] = useState(JSON.parse(localStorage.getItem(\"numbers\")) || allNumbers());\n  const [selectTile, setSelectTile] = useState(JSON.parse(localStorage.getItem(\"selectTile\")) || '');\n  const [notesMode, setNotesMode] = useState(false);\n  const [winGame, setWinGame] = useState(false);\n  const prevSelectTile = useRef({\n    value: '',\n    r: '',\n    c: '',\n    id: '',\n    isNotInitValue: false,\n    note: []\n  });\n  const sudokuGrid = sudoku.map(s => {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      id: s.id,\n      value: s.value,\n      r: s.r,\n      c: s.c,\n      isNotInitValue: s.isNotInitValue,\n      fillTile: () => setSelectTile(s),\n      notesMode: s.notesMode,\n      note: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  });\n  const rowNumber = numbers.map(n => {\n    return /*#__PURE__*/_jsxDEV(Number, {\n      number: n.value,\n      id: n.id,\n      count: n.count,\n      selectNumber: () => fillTile(n.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  });\n  useEffect(() => {\n    prevSelectTile.current = selectTile;\n    localStorage.setItem(\"selectTile\", JSON.stringify(selectTile));\n    localStorage.setItem(\"prevSelectTile\", JSON.stringify(prevSelectTile));\n  }, [selectTile]);\n  useEffect(() => {\n    const totCount = sudoku.reduce((tot, _ref) => {\n      let {\n        value\n      } = _ref;\n      tot[value] = tot[value] + 1;\n      return tot;\n    }, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    setNumbers(oldNum => oldNum.map(n => {\n      return { ...n,\n        count: totCount[n.value]\n      };\n    }));\n    localStorage.setItem(\"sudoku5\", JSON.stringify(sudoku));\n  }, [sudoku]);\n  React.useEffect(() => {\n    localStorage.setItem(\"numbers\", JSON.stringify(numbers));\n\n    if (numbers[0].count === 0) {\n      if (checkWin(sudoku)) {\n        setWinGame(true);\n        console.log(\"YOU WON\");\n      }\n    }\n  }, [numbers]);\n\n  function fillTile(value) {\n    setSudoku(oldSudoku => oldSudoku.map(s => {\n      if (s.id === selectTile.id && s.isNotInitValue) {\n        return notesMode ? { ...s,\n          notesMode: notesMode,\n          note: [...s.note, value],\n          value: ''\n        } : { ...s,\n          notesMode: notesMode,\n          value: value,\n          note: []\n        };\n      } else return s;\n    }));\n  }\n\n  function switchNotesMode() {\n    setNotesMode(old => !old);\n  }\n\n  console.log(sudoku);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [winGame && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sudoku-grid\",\n      children: sudokuGrid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"num-grid\",\n      children: rowNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: switchNotesMode,\n      children: notesMode ? \"notes\" : \"write\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"2wZNlGuzl/kqn6EUYjLRKzf4o1o=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/priscilla/Desktop/React/Sudoku/src/components/Game.js"],"names":["React","useRef","useEffect","useState","Tile","nanoid","Confetti","Number","generateSudokuGrid","allNumbers","checkWin","Game","sudoku","setSudoku","JSON","parse","localStorage","getItem","numbers","setNumbers","selectTile","setSelectTile","notesMode","setNotesMode","winGame","setWinGame","prevSelectTile","value","r","c","id","isNotInitValue","note","sudokuGrid","map","s","rowNumber","n","count","fillTile","current","setItem","stringify","totCount","reduce","tot","oldNum","console","log","oldSudoku","switchNotesMode","old"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\nimport Tile from './Tile';\nimport {nanoid} from \"nanoid\"\nimport Confetti from \"react-confetti\"\nimport Number from './Number'\nimport {generateSudokuGrid, allNumbers,checkWin} from './SudokuApi'\n\nexport default function Game() {\n    const [sudoku, setSudoku] = useState(JSON.parse(localStorage.getItem(\"sudoku5\")) || (generateSudokuGrid()))\n    const [numbers, setNumbers] = useState(JSON.parse(localStorage.getItem(\"numbers\")) || allNumbers())\n    const [selectTile, setSelectTile] = useState(JSON.parse(localStorage.getItem(\"selectTile\")) || '')\n    const [notesMode, setNotesMode] = useState(false)\n    const [winGame, setWinGame] = useState(false)\n    const prevSelectTile = useRef({\n        value: '',\n        r: '',\n        c: '',\n        id: '',\n        isNotInitValue: false,\n        note: []\n    })\n\n    const sudokuGrid = sudoku.map(s =>{\n        return(\n            <Tile\n                id={s.id}\n                value = {s.value}\n                r = {s.r}\n                c = {s.c}\n                isNotInitValue={s.isNotInitValue}\n                fillTile = {() => setSelectTile(s)}\n                notesMode = {s.notesMode}\n                note = {[]}\n            />)\n        })\n    const rowNumber = numbers.map(n => {\n        return(<Number\n                number={n.value}\n                id={n.id}\n                count={n.count}\n                selectNumber= {() => fillTile(n.value)}  \n                />)\n    })\n    \n    useEffect(() => {\n        prevSelectTile.current = selectTile\n        localStorage.setItem(\"selectTile\", JSON.stringify(selectTile))\n        localStorage.setItem(\"prevSelectTile\", JSON.stringify(prevSelectTile))\n    }, [selectTile])\n    \n    useEffect(() => {\n        const totCount = sudoku.reduce((tot, {value}) => {\n            tot[value] = tot[value] + 1\n            return tot }, [0,0,0,0,0,0,0,0,0,0])\n            \n          setNumbers(oldNum => oldNum.map(n => {\n                return {...n, count: totCount[n.value]} \n            }))       \n            localStorage.setItem(\"sudoku5\", JSON.stringify(sudoku)) \n    }, [sudoku])\n\n    React.useEffect(() => {\n        localStorage.setItem(\"numbers\", JSON.stringify(numbers))\n        if (numbers[0].count === 0 ) {\n            if(checkWin(sudoku)){\n                setWinGame(true)\n                console.log(\"YOU WON\")\n            }\n        }\n    }, [numbers])\n\n    function fillTile(value){\n        setSudoku(oldSudoku => oldSudoku.map(s => {\n            if(s.id === selectTile.id && s.isNotInitValue) {\n                return notesMode?\n                {...s, notesMode: notesMode,  note: [...s.note, value], value: ''} :\n                {...s, notesMode: notesMode, value: value, note : []} \n            }\n            else\n                return s\n        }))\n    }\n    \n    function switchNotesMode(){\n        setNotesMode(old => !old)\n    }\n    console.log(sudoku)\n    return (\n        <main>\n            {winGame && <Confetti />}\n            <div className= \"sudoku-grid\">\n                {sudokuGrid}\n            </div>\n            <div className= \"num-grid\">\n                {rowNumber}\n            </div>\n            <button onClick={switchNotesMode} >{notesMode ? \"notes\" : \"write\"}</button>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}