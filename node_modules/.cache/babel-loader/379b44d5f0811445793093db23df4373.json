{"ast":null,"code":"var _jsxFileName = \"/home/priscilla/Desktop/React/Sudoku/src/components/Number.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { Fragment, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountContext = /*#__PURE__*/React.createContext();\nconst CountUpdateContext = /*#__PURE__*/React.createContext();\nexport function useCountContext() {\n  _s();\n\n  return useContext(CountContext);\n}\n\n_s(useCountContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function useCountUpdateContext() {\n  _s2();\n\n  return useContext(CountUpdateContext);\n}\n\n_s2(useCountUpdateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function CountContextProvider(_ref) {\n  _s3();\n\n  let {\n    children\n  } = _ref;\n  const [count, setCount] = useState(0);\n\n  function increment() {\n    setCount(prevCount => prevCount++);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CountContext.Provider, {\n    value: count,\n    children: /*#__PURE__*/_jsxDEV(CountUpdateContext.Provider, {\n      value: increment,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(CountContextProvider, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = CountContextProvider;\nexport default function Number(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonNumber\",\n      disabled: props.count >= 9,\n      children: [\" \", props.number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Number;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CountContextProvider\");\n$RefreshReg$(_c2, \"Number\");","map":{"version":3,"sources":["/home/priscilla/Desktop/React/Sudoku/src/components/Number.js"],"names":["React","Fragment","useContext","useState","CountContext","createContext","CountUpdateContext","useCountContext","useCountUpdateContext","CountContextProvider","children","count","setCount","increment","prevCount","Number","props","number"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,QAAtC,QAAsD,OAAtD;;AACA,MAAMC,YAAY,gBAAGJ,KAAK,CAACK,aAAN,EAArB;AACA,MAAMC,kBAAkB,gBAAGN,KAAK,CAACK,aAAN,EAA3B;AACA,OAAO,SAASE,eAAT,GAA2B;AAAA;;AAC9B,SAAOL,UAAU,CAACE,YAAD,CAAjB;AACH;;GAFeG,e;;AAGhB,OAAO,SAASC,qBAAT,GAAiC;AAAA;;AACpC,SAAON,UAAU,CAACI,kBAAD,CAAjB;AACH;;IAFeE,qB;;AAGhB,OAAO,SAASC,oBAAT,OAAyC;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;;AACA,WAASU,SAAT,GAAoB;AAChBD,IAAAA,QAAQ,CAACE,SAAS,IAAIA,SAAS,EAAvB,CAAR;AACH;;AACD,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAGH,KAA/B;AAAA,2BACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,MAAA,KAAK,EAAGE,SAArC;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IAZeD,oB;;KAAAA,oB;AAahB,eAAe,SAASM,MAAT,CAAgBC,KAAhB,EAAsB;AACjC,sBACI,QAAC,QAAD;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAG,cAApB;AAAmC,MAAA,QAAQ,EAAIA,KAAK,CAACL,KAAN,IAAe,CAA9D;AAAA,sBAAoEK,KAAK,CAACC,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;MANuBF,M","sourcesContent":["import React, { Fragment, useContext, useState } from 'react';\nconst CountContext = React.createContext();\nconst CountUpdateContext = React.createContext();\nexport function useCountContext() {\n    return useContext(CountContext)\n}\nexport function useCountUpdateContext() {\n    return useContext(CountUpdateContext)\n}\nexport function CountContextProvider({children}){\n    const [count, setCount] = useState(0)\n    function increment(){\n        setCount(prevCount => prevCount++)\n    }\n    return(\n        <CountContext.Provider value ={count}>\n            <CountUpdateContext.Provider value= {increment}>\n                {children}\n            </CountUpdateContext.Provider>\n        </CountContext.Provider>\n    )\n}\nexport default function Number(props){\n    return(\n        <Fragment>\n            <button className = 'buttonNumber' disabled = {props.count >= 9} > {props.number}</button>\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}